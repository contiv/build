---
# This role contains tasks for installing ovs

- name: download ovs binaries (redhat)
  get_url:
    validate_certs: "{{ validate_certs }}"
    dest: "{{ item.dest }}"
    url: "{{ item.url }}"
  with_items:
    - {
        url: "https://cisco.box.com/shared/static/zzmpe1zesdpf270k9pml40rlm4o8fs56.rpm",
        dest: /tmp/openvswitch-2.3.1-2.el7.x86_64.rpm
      }
  when: ansible_os_family == "RedHat"
  tags:
    - prebake-for-dev

- name: install ovs (redhat)
  yum: name=/tmp/openvswitch-2.3.1-2.el7.x86_64.rpm state=present
  when: ansible_os_family == "RedHat"
  tags:
    - prebake-for-dev

- name: download ovs binaries (debian)
  get_url:
    validate_certs: "{{ validate_certs }}"
    dest: "{{ item.dest }}"
    url: "{{ item.url }}"
  with_items:
    - {
        url: "https://cisco.box.com/shared/static/v1dvgoboo5zgqrtn6tu27vxeqtdo2bdl.deb",
        dest: /tmp/ovs-common.deb
      }
    - {
        url: "https://cisco.box.com/shared/static/ymbuwvt2qprs4tquextw75b82hyaxwon.deb",
        dest: /tmp/ovs-switch.deb
      }
  when: ansible_os_family == "Debian"
  tags:
    - prebake-for-dev

- name: install ovs-common (debian)
  apt: "deb=/tmp/ovs-common.deb"
  when: ansible_os_family == "Debian"
  tags:
    - prebake-for-dev

- name: install ovs (debian)
  apt: "deb=/tmp/ovs-switch.deb"
  when: ansible_os_family == "Debian"
  tags:
    - prebake-for-dev

- name: start ovs service
  service: "name=openvswitch enabled=yes state=started"
  when: ansible_os_family == "RedHat"

- name: setup ovs
  shell: "ovs-vsctl set-manager {{ item }}"
  with_items:
    - "tcp:127.0.0.1:6640"
    - "ptcp:6640"

- name: check selinux status
  shell: sestatus
  register: selinux_set
  when: (ansible_os_family == "RedHat")

- name: permit openvswitch_t type in selinux
  shell: >
      semanage permissive -a openvswitch_t
  when: (ansible_os_family == "RedHat") and (selinux_set.stdout | search(".*SELinux status:.*enabled.*"))
  become: true

- name: setup iptables for vxlan vtep port
  shell: >
      ( iptables -L INPUT | grep "{{ netplugin_rule_comment }} ({{ item }})" ) || \
      iptables -I INPUT 1 -p udp --dport {{ item }} -j ACCEPT -m comment --comment "{{ netplugin_rule_comment }} ({{ item }})"
  become: true
  with_items:
    - "{{ vxlan_port }}"
